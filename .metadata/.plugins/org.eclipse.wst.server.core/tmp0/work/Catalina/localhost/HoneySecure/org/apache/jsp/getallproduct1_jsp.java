/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.36
 * Generated at: 2025-04-25 18:30:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.io.FileReader;
import java.io.BufferedReader;
import com.honeySecure.pojo.Product;
import com.honeySecure.daoimpl.ProductDaoImpl;
import java.util.List;

public final class getallproduct1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("com.honeySecure.pojo.Product");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.honeySecure.daoimpl.ProductDaoImpl");
    _jspx_imports_classes.add("java.io.FileReader");
    _jspx_imports_classes.add("java.io.BufferedReader");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\r\n");
      out.write("<title>All Products</title>\r\n");
      out.write("<style>\r\n");
      out.write(" @import url('https://fonts.googleapis.com/css2?family=Rajdhani:wght@500&display=swap');\r\n");
      out.write("\r\n");
      out.write("    body {\r\n");
      out.write("      margin: 0;\r\n");
      out.write("      padding: 0;\r\n");
      out.write("      font-family: 'Rajdhani', sans-serif;\r\n");
      out.write("      background: linear-gradient(to right, #00c6ff, #0072fc);\r\n");
      out.write("      height: 100vh;\r\n");
      out.write("      display: flex;\r\n");
      out.write("      justify-content: center;\r\n");
      out.write("      align-items: center;\r\n");
      out.write("      animation: fadeIn 0.6s ease-in;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .container {\r\n");
      out.write("      background-color: #ffffff;\r\n");
      out.write("      padding: 35px 30px;\r\n");
      out.write("      border-radius: 14px;\r\n");
      out.write("      border: 1px solid #d0d7de;\r\n");
      out.write("      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\r\n");
      out.write("      width: 700px;\r\n");
      out.write("      animation: slideUp 0.5s ease-out;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    h2 {\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      margin-bottom: 25px;\r\n");
      out.write("      color: #1e88e5;\r\n");
      out.write("      font-size: 24px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    table {\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      border-collapse: collapse;\r\n");
      out.write("      font-size: 15px;\r\n");
      out.write("      color: #333;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    th, td {\r\n");
      out.write("      padding: 12px;\r\n");
      out.write("      border: 1px solid #ccc;\r\n");
      out.write("      text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    th {\r\n");
      out.write("      background-color: #1e88e5;\r\n");
      out.write("      color: #fff;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    tr:nth-child(even) {\r\n");
      out.write("      background-color: #f0f4f8;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .back-link {\r\n");
      out.write("      display: block;\r\n");
      out.write("      margin-top: 1.5rem;\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      color: #1e88e5;\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("      font-size: 13px;\r\n");
      out.write("      transition: 0.3s;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .back-link:hover {\r\n");
      out.write("      color: #0d47a1;\r\n");
      out.write("      text-decoration: underline;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    @keyframes fadeIn {\r\n");
      out.write("      from { opacity: 0; }\r\n");
      out.write("      to { opacity: 1; }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    @keyframes slideUp {\r\n");
      out.write("      from { transform: translateY(40px); opacity: 0; }\r\n");
      out.write("      to { transform: translateY(0); opacity: 1; }\r\n");
      out.write("    }\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("  <h2>List of All Products</h2>\r\n");
      out.write("  <table>\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th>S.No.</th>\r\n");
      out.write("      <th>Product ID</th>\r\n");
      out.write("      <th>Product Name</th>\r\n");
      out.write("      <th>Price</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("    ");

    String path = "C:\\Users\\admin\\OneDrive\\Desktop\\HoneySecure\\HoneySecure\\src\\main\\webapp\\files\\data.txt";
    BufferedReader reader = new BufferedReader(new FileReader(path));
    String line;
    int count = 1;
    String pid = "", name = "", price = "";

    while ((line = reader.readLine()) != null) {
        if (line.startsWith("Product ID:")) {
            pid = line.substring(line.indexOf(":") + 1).trim();
        } else if (line.startsWith("Product Name:")) {
            name = line.substring(line.indexOf(":") + 1).trim();
        } else if (line.startsWith("Price:")) {
            price = line.substring(line.indexOf(":") + 1).trim();
        } else if (line.startsWith("------")) {

      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("    <td>");
      out.print( count++ );
      out.write("</td>\r\n");
      out.write("    <td>");
      out.print( pid );
      out.write("</td>\r\n");
      out.write("    <td>");
      out.print( name );
      out.write("</td>\r\n");
      out.write("    <td>");
      out.print( price );
      out.write("</td>\r\n");
      out.write("</tr>\r\n");

        }
    }
    reader.close();
    
      out.write("\r\n");
      out.write("   \r\n");
      out.write("  </table>\r\n");
      out.write("  <a href=\"home1.jsp\" class=\"back-link\">← Back to Home</a>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
