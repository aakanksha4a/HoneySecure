/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.36
 * Generated at: 2025-04-23 08:15:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.honeySecure.pojo.Product;
import com.honeySecure.daoimpl.ProductDaoImpl;

public final class saveproduct_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("com.honeySecure.pojo.Product");
    _jspx_imports_classes.add("com.honeySecure.daoimpl.ProductDaoImpl");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Product Operation</title>\r\n");
      out.write("<style>\r\n");
      out.write("    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@500&display=swap');\r\n");
      out.write("\r\n");
      out.write("    body {\r\n");
      out.write("        font-family: 'Poppins', sans-serif;\r\n");
      out.write("        background: linear-gradient(to right, #00c6ff, #0072ff);\r\n");
      out.write("        display: flex;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("        justify-content: center;\r\n");
      out.write("        height: 100vh;\r\n");
      out.write("        margin: 0;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .message-container {\r\n");
      out.write("        background-color: #fff;\r\n");
      out.write("        padding: 30px 50px;\r\n");
      out.write("        border-radius: 16px;\r\n");
      out.write("        box-shadow: 0 12px 25px rgba(0, 0, 0, 0.2);\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        color: #333;\r\n");
      out.write("        font-size: 20px;\r\n");
      out.write("        animation: fadeIn 0.6s ease-in;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    @keyframes fadeIn {\r\n");
      out.write("        from { opacity: 0; transform: translateY(20px); }\r\n");
      out.write("        to { opacity: 1; transform: translateY(0); }\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

    Product p = new Product();
    try {
        p.setPid(Integer.parseInt(request.getParameter("pid")));
    } catch (NumberFormatException e) {
        System.out.println("Invalid Product id: " + e);
    }

    p.setPname(request.getParameter("pname"));

    try {
        p.setPrice(Double.parseDouble(request.getParameter("price")));
    } catch (NumberFormatException e) {
        System.out.println("Invalid Product price: " + e);
    }

    String op = request.getParameter("b1");
    ProductDaoImpl daoimpl = new ProductDaoImpl();
    boolean b = false;
    String msg = "";

    if ("Add".equals(op)) {
        b = daoimpl.addProduct(p);
        msg = b ? "✅ Product Added Successfully" : "❌ Product Could Not be Added";
    }

    if ("Update".equals(op)) {
        b = daoimpl.updateProduct(p);
        msg = b ? "✅ Product Updated Successfully" : "❌ Product Could Not be Updated";
    }

    if ("Delete".equals(op)) {
        b = daoimpl.deleteProduct(p);
        msg = b ? "✅ Product Deleted Successfully" : "❌ Product Could Not be Deleted";
    }

    if ("Update Product".equals(op)) {
        b = daoimpl.updateProduct(p);
        msg = b ? "✅ Updated Successfully" : "❌ Product Could Not be Updated";

      out.write("\r\n");
      out.write("    ");
      if (true) {
        _jspx_page_context.forward("modifyproduct.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("msg", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf( msg ), request.getCharacterEncoding()));
        return;
      }
      out.write('\r');
      out.write('\n');

        return;
    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"message-container\">\r\n");
      out.write("    ");
      out.print( msg );
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      if (true) {
        _jspx_page_context.forward("amdproduct.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("msg", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(String.valueOf( msg ), request.getCharacterEncoding()));
        return;
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
