/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.36
 * Generated at: 2025-04-22 06:49:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class fake_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\" />\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\r\n");
      out.write("  <title>Home Page</title>\r\n");
      out.write("  <style>\r\n");
      out.write("    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@500&display=swap');\r\n");
      out.write("\r\n");
      out.write("    body {\r\n");
      out.write("      margin: 0;\r\n");
      out.write("      padding: 0;\r\n");
      out.write("      font-family: 'Poppins', sans-serif;\r\n");
      out.write("      background: linear-gradient(to right, #00c6ff, #0072ff);\r\n");
      out.write("      height: 100vh;\r\n");
      out.write("      display: flex;\r\n");
      out.write("      justify-content: center;\r\n");
      out.write("      align-items: center;\r\n");
      out.write("      animation: fadeIn 1s ease-in;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .container {\r\n");
      out.write("      background-color: rgba(255, 255, 255, 0.95);\r\n");
      out.write("      padding: 40px 35px;\r\n");
      out.write("      border-radius: 16px;\r\n");
      out.write("      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      max-width: 600px;\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      animation: slideUp 0.8s ease-out;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    h1 {\r\n");
      out.write("      font-size: 28px;\r\n");
      out.write("      color: #0072ff;\r\n");
      out.write("      margin-bottom: 25px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    p {\r\n");
      out.write("      font-size: 16px;\r\n");
      out.write("      color: #333;\r\n");
      out.write("      margin-bottom: 30px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .top-right {\r\n");
      out.write("      position: absolute;\r\n");
      out.write("      top: 20px;\r\n");
      out.write("      right: 30px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .top-right a {\r\n");
      out.write("      color: #fff;\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("      font-weight: bold;\r\n");
      out.write("      font-size: 14px;\r\n");
      out.write("      border-bottom: 1px solid transparent;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .top-right a:hover {\r\n");
      out.write("      border-bottom: 1px solid #fff;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .btn-group a {\r\n");
      out.write("      display: inline-block;\r\n");
      out.write("      padding: 14px 25px;\r\n");
      out.write("      font-size: 18px;\r\n");
      out.write("      color: white;\r\n");
      out.write("      background-color: #ff4081;\r\n");
      out.write("      border: none;\r\n");
      out.write("      border-radius: 30px;\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("      margin: 10px;\r\n");
      out.write("      transition: background-color 0.3s ease, transform 0.2s ease;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .btn-group a:hover {\r\n");
      out.write("      background-color: #f50057;\r\n");
      out.write("      transform: scale(1.05);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    @keyframes fadeIn {\r\n");
      out.write("      from { opacity: 0; }\r\n");
      out.write("      to { opacity: 1; }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    @keyframes slideUp {\r\n");
      out.write("      from { transform: translateY(50px); opacity: 0; }\r\n");
      out.write("      to { transform: translateY(0); opacity: 1; }\r\n");
      out.write("    }\r\n");
      out.write("  </style>\r\n");
      out.write("  <script>\r\n");
      out.write("        setTimeout(function() {\r\n");
      out.write("           \r\n");
      out.write("            alert(\"Session expired. You are being logged out.\");\r\n");
      out.write("            window.location.href = \"login.jsp\"; \r\n");
      out.write("        }, 6000);\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("  <!-- Logout Link -->\r\n");
      out.write("  <div class=\"top-right\">\r\n");
      out.write("    <a href=\"Logout.jsp\">Logout</a>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <!-- Container for content -->\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write("    <h1>Welcome to the Home Page</h1>\r\n");
      out.write("    <p>You have successfully logged in. Use the navigation below to explore the site.</p>\r\n");
      out.write("\r\n");
      out.write("    <!-- Buttons for navigation -->\r\n");
      out.write("    <div class=\"btn-group\">\r\n");
      out.write("      <a href=\"amdproduct.jsp\">Add/Update/Delete</a>\r\n");
      out.write("      <a href=\"Search.jsp\">Search</a>\r\n");
      out.write("      <a href=\"getallproduct.jsp\">List</a>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
